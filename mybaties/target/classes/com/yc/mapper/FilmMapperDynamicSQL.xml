<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--拼接作用-->
<mapper namespace="com.yc.mapper.FilmMapperDynamicSQL">

    <!--List<Film> findByTermIf(Film film);-->
    <select id="findByTermIf" resultType="com.yc.entity.Film">
        select fid , fname , tid , actor , director , price , fpic from tb_film where 1=1
        <!--非空判断 有值的就进行  拼接-->
        <if test="fid !=null">
            and fid =#{fid}
        </if>
        <!--fname!=""-->
        <if test="fname!=null and fname!=&quot;&quot;">
          and  fname=#{fname}
        </if>
        <if test="actor!=null and actor != &quot;&quot;">
            and actor like #{actor}
        </if>
        <if test="director!=null and director != &quot;&quot;">
            and director like #{director}
        </if>
    </select>


    <select id="findByTermTrim" resultType="com.yc.entity.Film">
        select fid , fname ,tid ,actor , director , price, fpic from tb_film
        <!--非空判断 有值的就进行  拼接
            prefix:前缀trim 标签中拼接整个字符串前面加入值
            prefixOverrides:前缀覆盖 trim标签中拼接整个字符串 最前指定内容
            suffixOverrides:后缀覆盖
            suffix:后缀-->
        <trim prefix="where" prefixOverrides="and" >
            <if test="fid !=null">
                and fid =#{fid}
            </if>
            <if test="fname!=null and fname!=&quot;&quot;">
                land fname =#{fname}
            </if>
            <if test="actor !=null and actor!=&quot;&quot; ">
                and actor like #{actor}
            </if>
        </trim>
    </select>

    <!--List<Film> findByTermChoose(Film film);-->
    <select id="findByTermChoose" resultType="com.yc.entity.Film">
        select fid , fname ,tid ,actor , director , price , fpic from tb_film
        <where>
            <choose>
                <when test="fid!=null">
                    fid=#{fid}
                </when>
                <when test="fname!=null and fname!=&quot;&quot;">
                    fname=#{fname}
                </when>
                <otherwise>
                   actor like #{actor}
                </otherwise>
            </choose>
        </where>
    </select>

    <!-- void updateFilm(Film film) -->
    <update id="updateFilm" parameterType="com.yc.entity.Film">
        update tb_fiLm
<!--        <set>-->
<!--            <if test="fname!=null and fname !=&quot;&quot;">-->
<!--                fname=#{fname}-->
<!--            </if>-->
<!--            <if test="actor!=null and actor!=&quot;&quot;">-->
<!--                actor=#{actor}-->

<!--            </if>-->
<!--            <if test="director!=null and director !=&quot;&quot;">-->
<!--                director=#{director}-->
<!--            </if>-->
<!--            <if test="fpic!=null and fpic!=&quot;&quot;">-->
<!--                fpic=#{fpic}-->
<!--            </if>-->
<!--        </set>-->
<!--        where fid=#{fid}-->
    </update>

<!--    <select id="findByFinds" resultType="film">-->
<!--        select fid, fname, tid, actor, director, price, fpic from tb. _fiLm-->
<!--        where fid in-->
<!--        <foreach collection="list" item="item" index="index" separator="," open="(close=)">-->
<!--            #{item}-->
<!--        </foreach>-->
<!--    </select>-->


<!--    <insert id="addFilms">-->
<!--        insert into tb_ film-->
<!--        ( fname,tid,actor,director,price,flpic)-->
<!--        values-->
<!--        <foreach collection="list" item="film" separator=",">:-->
<!--            (#{film.fname}, #{fiLm.filmType. tid}, #{film.actor}, #{film.director}, #{fiLm.price}, #{film.fpic})-->
<!--        </foreach>-->
<!--    </insert>-->
</mapper>
