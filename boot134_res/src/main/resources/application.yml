server:
  port: 8000
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  profiles:
    active: "prod"
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/res
    username: #It is generally referred to root
    password: #Your password
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid
        login-password: druid
        # IP白名单
        allow: 127.0.0.1            #上线后请将密码设置 复杂，且允许远程访问
        # IP黑名单（共同存在时，deny优先于allow）
        deny:
  web:
    resources:
      static-locations: [ classpath:/static/,classpath:/public,classpath:/resources ]
  redis:
    #spring.redis.database: 0：指定连接Redis时使用的数据库，默认为0。
    database: 0
    #spring.redis.port: 6379：指定Redis服务器的端口号，默认为6379。
    port: 6379
    lettuce:
      pool:
        #spring.redis.lettuce.pool.max-idle: 8：指定连接池中的最大空闲连接数，默认为8。
        max-idle: 8
        #spring.redis.lettuce.pool.min-idle: 0：指定连接池中的最小空闲连接数，默认为0。
        min-idle: 0
        #spring.redis.lettuce.pool.max-active: 8：指定连接池中的最大活动连接数，默认为8。
        max-active: 8
        #spring.redis.lettuce.pool.max-wait: -1ms：指定从连接池中获取连接时的最大等待时间，默认为-1ms，表示无限等待。
        max-wait: -1ms
        #spring.redis.timeout: 180：指定与Redis服务器建立连接的超时时间，单位为秒，默认为180秒。
    timeout: 180
  session:
    #session存储方式:session
    store-type: redis
  mail:
    default-encoding: utf-8
    host: # 发件服务器地址,不同邮件平台地址不同
    port:  #端口一般为465 587
    username: #发送邮箱的账号
    password: #你的授权码
    protocol: #发送邮件账号的授权码,这里的授权码不是验证码.需要到邮箱获取
    test-connection: #设置是否在启动时测试与邮件服务器的连接。若设置为true，在应用程序启动时，会尝试与邮件服务器建立连接并进行测试。
    properties: #设置其他邮件相关的属性
      properties:
        timeout: #设置与邮件服务器建立连接的超时时间，以毫秒为单位。
        connection-timeout: #设置连接邮件服务器的超时时间，以毫秒为单位
        write-timeout:  #设置写入邮件服务器的超时时间，以毫秒为单位。
        mail.smtp.auth: #设置是否启用 SMTP 认证，用于验证发送邮件的身份。
        mail.smtp.starttls.enable: #设置是否启用 STARTTLS，当使用加密连接时需要启用。
        mail.smtp.ssl.enable: #设置是否要求启用 STARTTLS。启用后，若邮件服务器不支持 STARTTLS，则连接将被拒绝。
        mail.display.sendemail: # 设置是否显示发送邮件的日志。
logging:
  level:
    root: info
    org.springframework.web: info
    org.apache: error
  logback:
    rollingpolicy:
      max-file-size: 1MB
  file:
    path: logs/

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启SQL语句打印

